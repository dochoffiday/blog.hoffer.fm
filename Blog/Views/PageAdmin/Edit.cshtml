@model BC.Models.BC_Page

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<h2>Edit Page</h2>
<p>
    Use the form below to edit a Page.  @Html.ActionLink("[Preview]", "details", "page", new { slug = Model.Slug }, "") 
</p>

<script type="text/javascript">
    var surl = "@Url.Content("~/Services/AdminService.asmx/slug")";
</script>
@Html.Raw(SquishIt.Framework.Bundle.JavaScript().Add("~/Scripts/jquery.validate.min.js").Add("~/Scripts/jquery.validate.unobtrusive.min.js").Add("~/Scripts/controls/alphanumeric/jquery.alphanumeric.min.js").Add("~/Scripts/controls/checkbox/jquery.checkbox.js").Add("~/Scripts/pages/pageAdmin.edit.js").Render("~/Scripts/combined_page_#.js"))

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        @Html.HiddenFor(model => model.PageID)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Modified)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Slug)
        </div>
        <div class="slug-field">
            https://@BC.Core.Context.Current.Domain/ @Html.EditorFor(model => model.Slug)
            <a id="slug-update" class="pointer">update</a>
            @Html.ValidationMessageFor(model => model.Slug)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Body)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Body)
            @Html.ValidationMessageFor(model => model.Body)
        </div>

        <div class="editor-label">
            Published
        </div>
        <div class="editor-field checkbox">
            @Html.LabelFor(model => model.IsPublished)
            @Html.EditorFor(model => model.IsPublished)
            @Html.ValidationMessageFor(model => model.IsPublished)
        </div>

        <p>
            <input type="submit" value="Save" class="buttons positive submit" />
        </p>
    </fieldset>
}

<div class="breadcrumb">
    @Html.ActionLink("<- Back to List", "index")
</div>
