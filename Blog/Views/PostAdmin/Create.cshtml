@model BC.Models.BC_Post

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<h2>Create Post</h2>
<p>
    Use the form below to create a Post.
</p>

<script type="text/javascript">
    var url = "@Url.Content("~/Services/AdminService.asmx/Tags")";
    var surl = "@Url.Content("~/Services/AdminService.asmx/slug")";
</script>
@Html.Raw(SquishIt.Framework.Bundle.JavaScript().Add("~/Scripts/jquery.validate.min.js").Add("~/Scripts/jquery.validate.unobtrusive.min.js").Add("~/Scripts/controls/alphanumeric/jquery.alphanumeric.min.js").Add("~/Scripts/controls/checkbox/jquery.checkbox.js").Add("~/Scripts/pages/postAdmin.edit.js").Render("~/Scripts/combined_page_#.js"))

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CategoryID, new SelectList(Model.Categories(), "CategoryID", "Name", Model.CategoryID), "-- Select Category --")
            @Html.ValidationMessageFor(model => model.CategoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Slug)
        </div>
        <div class="slug-field">
            https://@BC.Core.Context.Current.Domain<span id="category">category</span>/ @Html.EditorFor(model => model.Slug)
            <a id="slug-update" class="pointer">update</a>
            @Html.ValidationMessageFor(model => model.Slug)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Body)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Body)
            @Html.ValidationMessageFor(model => model.Body)
        </div>

        <div class="editor-label">
            Tags
        </div>
        <div class="editor-field">
            @Html.TextBox("Tags")
        </div>

        <div class="editor-label">
            Comments Are Open
        </div>
        <div class="editor-field checkbox">
            @Html.LabelFor(model => model.IsCommentsOpen)
            @Html.EditorFor(model => model.IsCommentsOpen)
            @Html.ValidationMessageFor(model => model.IsCommentsOpen)
        </div>

        <div class="editor-label">
            Show Comments
        </div>
        <div class="editor-field checkbox">
            @Html.LabelFor(model => model.IsCommentsVisible)
            @Html.EditorFor(model => model.IsCommentsVisible)
            @Html.ValidationMessageFor(model => model.IsCommentsVisible)
        </div>

        <div class="editor-label">
            Published
        </div>
        <div class="editor-field checkbox">
            @Html.LabelFor(model => model.IsPublished)
            @Html.EditorFor(model => model.IsPublished)
            @Html.ValidationMessageFor(model => model.IsPublished)
        </div>

        <div class="editor-label">
            Publish Date
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PublishDate)
            @Html.ValidationMessageFor(model => model.PublishDate)
        </div>

        <p>
            <input type="submit" value="Create" class="buttons positive submit" />
        </p>
    </fieldset>
}

<div class="breadcrumb">
    @Html.ActionLink("<- Back to List", "index")
</div>

