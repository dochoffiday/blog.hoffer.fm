<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>AJ Hoffer's Blog</title>
		<link>https://blog.hoffer.fm/</link>
		<description />
		<copyright>2020</copyright>
		<pubDate>Wed, 23 Dec 2020 00:25:45 GMT</pubDate>
		<lastBuildDate>Wed, 23 Dec 2020 00:25:45 GMT</lastBuildDate>
		<item>
			<title>Spruce Up Your List-Item Bullets with Emojis!</title>
			<link>https://blog.hoffer.fm/professional/spruce-up-your-list-item-bullets-with-emojis</link>
			<description>&lt;p&gt;If you want to add some pizzazz (🎆) to your lists with flashier bullets, it's easy to do with emojis!&lt;/p&gt;</description>
			<guid>https://blog.hoffer.fm/professional/spruce-up-your-list-item-bullets-with-emojis</guid>
			<pubDate>Thu, 20 Feb 2020 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;If you want to add some pizzazz (🎆) to your lists with flashier bullets, it's easy to do with emojis!&lt;/p&gt;
&lt;p&gt;🤘🚀😎🍕🥓🍩🌭🏓🥇🔨🤷‍♂️🎅🐖🏍☢🎉🎈&lt;/p&gt;
&lt;h3&gt;The Basic Setup&lt;/h3&gt;
&lt;style type="text/css"&gt;
	ul.rocket-one li {
		list-style-type: none !important;
	}

	ul.rocket-one li:before {
		content: '🚀';
	}

	ul.rocket-two li {
		list-style-type: none !important;
		margin-left: 0;
	}

	ul.rocket-two li:before {
		content: '🚀';
        display: inline-block;
        transform: rotate(45deg);
	}

	ul.rocket-three {
		margin-left: 2em !important;
	}

	ul.rocket-three li {
		list-style-type: none !important;
		margin-left: 0;
		position: relative;
	}

	ul.rocket-three li:before {
		content: '🚀';
		display: inline-block;
		transform: rotate(45deg);
		position: absolute;
		top: -.01em;
		left: -2em;
	}

	ul.emojis {
		margin-left: 2em !important;
	}

	ul.emojis li {
		list-style-type: none !important;
		margin-left: 0;
		position: relative;
	}

	ul.emojis li:before {
		display: inline-block;
		position: absolute;
		left: -2em;
	}

	ul.emojis li.emoji-hot-dog:before {
		content: '🌭';
		top: 0;
	}

	ul.emojis li.emoji-cowboy:before {
		content: '🤠';
		top: .01em;
		transform: rotate(180deg);
	}

	ul.emojis li.emoji-bacon:before {
		content: '🥓';
		top: .1em;
		animation: spin 4s linear infinite;
	}
	@@keyframes spin { 100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } }
&lt;/style&gt;
&lt;p&gt;To start, all we need to do is set the &lt;code&gt;content&lt;/code&gt; of the list-item:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
    ul.rocket li {
        list-style-type: none;
    }
       
    ul.rocket li:before {
        content: '🚀';
    }
&amp;lt;/style&amp;gt;
&amp;lt;ul class=&amp;quot;rocket&amp;quot;&amp;gt;
    &amp;lt;li&amp;gt;ten&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;nine&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;eight&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;seven&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;six&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;five&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;four&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;three&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;two&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;one&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;blast off!&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
    &lt;ul class="rocket-one"&gt;
        &lt;li&gt;ten&lt;/li&gt;
        &lt;li&gt;nine&lt;/li&gt;
        &lt;li&gt;eight&lt;/li&gt;
        &lt;li&gt;seven&lt;/li&gt;
        &lt;li&gt;six&lt;/li&gt;
        &lt;li&gt;five&lt;/li&gt;
        &lt;li&gt;four&lt;/li&gt;
        &lt;li&gt;three&lt;/li&gt;
        &lt;li&gt;two&lt;/li&gt;
        &lt;li&gt;one&lt;/li&gt;
        &lt;li&gt;blast off!&lt;/li&gt;
    &lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;... and that's it! But let's see if we can take it a step further by rotating the 🚀.&lt;/p&gt;
&lt;h3&gt;Rotate!&lt;/h3&gt;
&lt;p&gt;We'll tap into the &lt;code&gt;transform&lt;/code&gt; to &lt;em&gt;rotate&lt;/em&gt; our little 🚀. Since this is an inline element, we also need to set the &lt;code&gt;::before&lt;/code&gt; to &lt;code&gt;display: inline-block;&lt;/code&gt; (per the &lt;a href="https://drafts.csswg.org/css-transforms-1/#terminology"&gt;W3 specifications&lt;/a&gt;).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
    ul.rocket li {
        list-style-type: none;
    }
       
    ul.rocket li:before {
        content: '🚀';
        display: inline-block;
        transform: rotate(45deg);
        font-size: .85em; // I also made it a little smaller
    }
&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
    &lt;ul class="rocket-two"&gt;
        &lt;li&gt;I am the rocket man.&lt;/li&gt;
        &lt;li&gt;I am the rocket man. I am the rocket man. I am the rocket man. I am the rocket man. I am the rocket man. I am the rocket man. I am the rocket man. I am the rocket man. I am the rocket man. I am the rocket man. &lt;/li&gt;
    &lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;That looks OK, but the 🚀 butts up pretty close to the text, and the text shouldn't wrap &lt;em&gt;under&lt;/em&gt; the 🚀. But we can fix all that!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
    ul.rocket {
        margin-left: 2em; // you may have to fiddle with this
    }
       
    ul.rocket li {
        list-style-type: none;
        position: relative;
    }
       
    ul.rocket li:before {
        content: '🚀';
        display: inline-block;
        transform: rotate(45deg);
        font-size: .85em; // I also made it a little smaller
        position: absolute;
        top: -.01em; // you may have to fiddle with this
        left: -2em; // you may have to fiddle with this
    }
&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
    &lt;ul class="rocket-three"&gt;
        &lt;li&gt;T minus 10 minutes.&lt;/li&gt;
        &lt;li&gt;T minus 10 minutes. T minus 10 minutes. T minus 10 minutes. T minus 10 minutes. T minus 10 minutes. T minus 10 minutes. T minus 10 minutes. T minus 10 minutes. T minus 10 minutes. T minus 10 minutes. &lt;/li&gt;
        &lt;li&gt;T minus 10 minutes.&lt;/li&gt;
    &lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's looking good! You may have to adjust some of the padding and position depending on which emoji you choose and your existing styles. But the bulk of the work is done. You can mix-and-match emojis if you want and even add some spinning!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
    ul.emojis {
        margin-left: 2em !important;
    }
       
    ul.emojis li {
        list-style-type: none !important;
        position: relative;
    }
       
    ul.emojis li:before {
        display: inline-block;
        font-size: .85em;
        position: absolute;
        left: -2em;
    }
       
    ul.emojis li.emoji-hot-dog:before {
        content: '🌭';
        top: 0;
    }
       
    ul.emojis li.emoji-cowboy:before {
        content: '🤠';
        top: .01em;
        transform: rotate(180deg);
    }
       
    ul.emojis li.emoji-bacon:before {
        content: '🥓';
        top: .1em;
        animation: spin 4s linear infinite;
    }
    &amp;#64;keyframes spin { 100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } }
&amp;lt;/style&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
    &lt;ul class="emojis"&gt;
        &lt;li class="emoji-hot-dog"&gt;Hot diggity dog!&lt;/li&gt;
        &lt;li class="emoji-cowboy"&gt;Yeehaw!&lt;/li&gt;
        &lt;li class="emoji-bacon"&gt;Sizzling!&lt;/li&gt;
    &lt;/ul&gt;
&lt;/blockquote&gt;</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>How to Store Additional User Information in Forms Authentication</title>
			<link>https://blog.hoffer.fm/professional/how-to-store-additional-user-information-in-forms-authentication</link>
			<description>&lt;p&gt;When using Forms Authentication, it can be desirable to store additional information with the authentication cookie, like the user's first name, or whether or not they are an admin. Thankfully, while not super intuitive, Forms Authentication does provide this capability, using the FormsAuthenticationTicket's UserData property.&lt;/p&gt;</description>
			<guid>https://blog.hoffer.fm/professional/how-to-store-additional-user-information-in-forms-authentication</guid>
			<pubDate>Fri, 07 Dec 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;When using Forms Authentication, it can be desirable to store additional information with the authentication cookie, like the user's first name, or whether or not they are an admin. Thankfully, while not super intuitive, Forms Authentication does provide this capability, using the FormsAuthenticationTicket's UserData property.&lt;/p&gt;
&lt;p&gt;The UserData property is a &lt;code&gt;string&lt;/code&gt;, so you can store pipe-separated data, or even a serialized object.&lt;/p&gt;
&lt;h3 id="the-code"&gt;The Code&lt;/h3&gt;
&lt;script src="https://gist.github.com/dochoffiday/badfd41c4b1bc51971d00080d157943b.js"&gt;&lt;/script&gt;
&lt;p&gt;To see the full gist, &lt;a href="https://gist.github.com/dochoffiday/badfd41c4b1bc51971d00080d157943b"&gt;click here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="further-reading"&gt;Further Reading&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/aspnet/web-forms/overview/older-versions-security/introduction/forms-authentication-configuration-and-advanced-topics-cs#step-4-storing-additional-user-data-in-the-ticket"&gt;Forms Authentication Configuration and Advanced Topics (C#)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
		<item>
			<title>Adding Up Rounded Percentages to Equal 100%</title>
			<link>https://blog.hoffer.fm/professional/adding-up-rounded-percentages-to-equal-100</link>
			<description>&lt;p&gt;When working with rounded percentages, it's actually not that easy to make sure the percentages add up to 100%. Take the following example:&lt;/p&gt;</description>
			<guid>https://blog.hoffer.fm/professional/adding-up-rounded-percentages-to-equal-100</guid>
			<pubDate>Thu, 17 Aug 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;When working with rounded percentages, it's actually not that easy to make sure the percentages add up to 100%. Take the following example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;40.5%&lt;/li&gt;
&lt;li&gt;20.6%&lt;/li&gt;
&lt;li&gt;38.9%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you use basic rounding, you'll get 41%, 21%, and 39%... which adds up to 101%!&lt;/p&gt;
&lt;p&gt;So, what can we do?&lt;/p&gt;
&lt;h3 id="the-solution"&gt;The Solution&lt;/h3&gt;
&lt;p&gt;The logic behind the solution is fairly straightforward and is just a spin-off of the &lt;a href="https://en.wikipedia.org/wiki/Largest_remainder_method"&gt;largest remainder method&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instead of rounding to the closest integer, round everything &lt;em&gt;down&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Take the sum of those numbers, and subtract it from 100 to determine the difference&lt;/li&gt;
&lt;li&gt;Re-allocate the difference by adding &lt;em&gt;1&lt;/em&gt; to the numbers with the highest decimal&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Going back to our example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We round the numbers to 40, 20, and 38&lt;/li&gt;
&lt;li&gt;We subtract the sum of those (98) from 100, which equals &lt;strong&gt;2&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;We add &lt;em&gt;1&lt;/em&gt; to the top &lt;strong&gt;2&lt;/strong&gt; highest decimals, which gives us 40, 21, and 39... the sum of which equals 100!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That was the &lt;em&gt;easy&lt;/em&gt; part. The real trick is duplicating that in code. Thankfully, it's already been done! Read the next section for a class that automatically rounds these numbers, while still preserving their original order.&lt;/p&gt;
&lt;h3 id="the-code"&gt;The Code&lt;/h3&gt;
&lt;script src="https://gist.github.com/dochoffiday/333a22e937f7503cd770ed70a429df23.js"&gt;&lt;/script&gt;
&lt;p&gt;To see the full gist, &lt;a href="https://gist.github.com/dochoffiday/333a22e937f7503cd770ed70a429df23"&gt;click here&lt;/a&gt;.&lt;/p&gt;
</content:encoded>
			<comments xmlns="http://purl.org/rss/1.0/modules/slash/">0</comments>
		</item>
	</channel>
</rss>